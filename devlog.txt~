MaGiC
Matteo Wong
Caleb SMith-Salzberg
Gilvir Gill

pd 1
---------------------
Mastermind

devlog--
Use keyboard shortcut to jump to end,
 replicate entry template,
 modify appropriately.

zone of reflection--
Flesh out each category whenever necessary, appropriate.
 Need not be fully filled in until end of project,
 but best done as you go along.


/////////// Zone of Reflection \\\\\\\\\\\
------------------------------------------
OBSTACLES OVERCOME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
wow we so BOSS bc...

There was a bug that caused things that should have been removed from the arrayList to not be removed.
After a long time tracing, Caleb realized that there was an error that caused an else statement to be run when it should not have been
This caused something to be wrong early on in the algorithm, and messed everything up.
By adding the word "else" before the if, all problems were fixed!

UNRESOLVED ISSUES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
blah blah pesky bug...
maybe some of these will move into the Obs.Ovrcm section...

COOL STUFF LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
wow! oo!...

MID-DEVELOPMENT DESIGN CHANGES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
we changed ___ to ___ bc...

LESSONS LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tales of wisdom gained...
||||||||||||||||||||||||||||||||||||||||||



 ______   ______   __   __   __       ______   _______     
/_____/\ /_____/\ /_/\ /_/\ /_/\     /_____/\ /______/\    
\:::_ \ \\::::_\/_\:\ \\ \ \\:\ \    \:::_ \ \\::::__\/__  
 \:\ \ \ \\:\/___/\\:\ \\ \ \\:\ \    \:\ \ \ \\:\ /____/\ 
  \:\ \ \ \\::___\/_\:\_/.:\ \\:\ \____\:\ \ \ \\:\\_  _\/ 
   \:\/.:| |\:\____/\\ ..::/ / \:\/___/\\:\_\ \ \\:\_\ \ \ 
    \____/_/ \_____\/ \___/_(   \_____\/ \_____\/ \_____\/ 
==============================================================


yyyy-mm-dd
--------------------------------------------------------------
<Member> :: <Thing member did.>
<Member> :: <Thing member did.>
<Member> :: <Thing member did.>
==============================================================
2016-01-05
--------------------------------------------------------------
All :: Work on proposal.
==============================================================
2016-01-06
--------------------------------------------------------------
All :: spent the weekend lightly thinking of ideas and algorithms.
==============================================================
2016-01-09
--------------------------------------------------------------
All :: Created every necessary file, based on UMLs and proposal. Discussed organization of github repo.
Matteo :: Began work on Game.java constructor. Wrote improved UMLs.
Caleb :: Wrote a method to translate from a color to a number. Wrote a method for the computer to generate a random combo.
Gilvir :: Began work on prompt.java, which guides the user through the game.
==============================================================
2016-01-10
--------------------------------------------------------------
All :: Wrote basic parts of methods required for the user to play as the guesser.
Matteo :: Wrote a constructor for Computer.java. Wrote todo.txt to organize ideas.
Caleb :: Wrote givePegs, a method that checks a guess, and returns the necessary pegs
Gilvir :: Continued prompt.java.
==============================================================
2016-01-11
--------------------------------------------------------------
All :: Discussed how to dombine all the methods made to complete the mastermind game with the user playing as guesser
Matteo :: Wrote turn() method, which uses previously defined methods to run one turn. Debugged Computer and User, wrote basic Guesser class which needs updating
Caleb :: Updated devlog for all days. Debugged and added to Guess.java so that the user can now play a full game of mastermind as the guesser!
Gilvir :: Finished prompt.java
==============================================================
2016-01-12
--------------------------------------------------------------
All :: Discussed how the algorithm will work and robustifying code so we don't need multiple methods doing very similar things
Matteo :: worked on AI algorithm, Woo.java
Caleb :: made very important KTS for AI algorithm
Gilvir :: robustified Prompt.java
==============================================================
2016-01-14
--------------------------------------------------------------
All :: Discussed how the algorithm will work and robustifying code so we don't need multiple methods doing very similar things
Matteo :: Continued thinking on algorithms and general problems
Caleb :: Formed solid layout for algorithm. Created script to generate all possiblilities, and makeGuess.java, which is close to
         producing a guess based on previous guess and pegs. The idea is to eliminate from all possibilities the ones that do not fit
         the information provided.
Gilvir :: Continued thinking on algorithms and general problems
==============================================================
2016-01-15
--------------------------------------------------------------
All :: Discussed how the algorithm will work and robustifying code so we don't need multiple methods doing very similar things
Matteo :: Continued thinking on algorithms and general problems, started algo specified in proposal
Caleb :: Thought about the algorithm created late the night before, and realized it should work. Removed unnecessary sections,
         and added helpful comments so that teammates can also revise and look over it.
Gilvir :: 
==============================================================
2017-01-16
--------------------------------------------------------------
Matteo :: worked on algo, made TwoPlayer.java
Caleb :: Fixed bug in algorithm, so now it works. Must test to see if it comes down to the solution in 12 attempts.
<Member> :: <Thing member did.>
==============================================================
2017-01-17
--------------------------------------------------------------
Matteo :: worked on testing MakeGuess.java in MasterMind.java
Caleb :: Completed version of MasterMind.java, so that the computer guesses against itself, and generates its own pegs 
         to test the algorithm... it works!
Gilvir :: 
==============================================================
